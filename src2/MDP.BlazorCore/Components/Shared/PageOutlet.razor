@using System.Text.Json;

@namespace MDP.BlazorCore
@implements IDisposable
@code {

    // Constants    
    internal static readonly object PageDataSectionId = new();

    internal static readonly object PageScriptSectionId = new();


    // Fields
    [Inject]
    public IJSRuntime _jsRuntime { get; set; }

    [Inject]
    public InteropManager _interopManager { get; set; }

    private DotNetObjectReference<PageOutlet> _interopReference = null;


    // Constructors        
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // Require
        if (firstRender == false) return;

        // InteropReference
        _interopReference = DotNetObjectReference.Create(this);
        if (_interopReference == null) throw new InvalidOperationException($"{nameof(_interopReference)}=null");

        // Initialize
        await _jsRuntime.InvokeVoidAsync("mdp.blazor.interopManager.initialize", _interopReference);
    }

    public void Dispose()
    {
        // InteropReference
        _interopReference?.Dispose();
    }


    // Methods
    [JSInvokable]
    public Task<object> InvokeMethodAsync(string path, JsonDocument parameters)
    {
        #region Contracts

        ArgumentNullException.ThrowIfNullOrEmpty(path);
        ArgumentNullException.ThrowIfNull(parameters);

        #endregion

        // Return
        return _interopManager.InvokeMethodAsync(path, parameters);
    }
}


<SectionOutlet SectionId="@PageDataSectionId" />
<SectionOutlet SectionId="@PageScriptSectionId" />
<script>

    // blazorPageLoaded
    document.addEventListener("DOMContentLoaded", function () {

        // pageLoaded
        mdp.blazor.eventManager.dispatchPageLoaded();
    }, { once: true });
</script>